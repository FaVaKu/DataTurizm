from telebot import TeleBot
import sqlite3
from telebot.types import Message, ReplyKeyboardMarkup, ReplyKeyboardRemove, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
import datetime
from pathlib import Path
import os



TOKEN_BOT = '5729656929:AAHSxglQG-DeuNCWOlENB91H8usjvoAzkps'
bot = TeleBot(TOKEN_BOT)
bot.set_webhook()

connection = sqlite3.connect("dbhack.db")
cursor = connection.cursor()

# cursor.execute("CREATE TABLE Hack (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `area` TEXT, `year` INTEGER, `season` TEXT, `month` TEXT, `description` TEXT, `feedback` TEXT, `mark` INTEGER, `date` TEXT, `userid` INTEGER, `src` TEXT);")
# connection.commit()

# cursor.execute("CREATE TABLE Moders (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `moder_id` INTEGER);")
# connection.commit()

# –ó–∞–ø—Ä–æ—Å –≤ –¥–±
def main(sql):
    try:
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        connection = sqlite3.connect("dbhack.db")
        cursor = connection.cursor()

        cursor.execute(sql)
        result = cursor.fetchall()


        connection.commit()
        
        # –ù–µ –∑–∞–±—ã–≤–∞–µ–º –∑–∞–∫—Ä—ã—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        connection.close()
        return result

    except Exception as e:
        print(f'+++ {e}')

main(f"INSERT INTO Moders (`moder_id`) VALUES ('806902493')")
# main(f"INSERT INTO Moders (`moder_id`) VALUES ('735054458')")
# main(f"INSERT INTO Moders (`moder_id`) VALUES ('998781783')")



@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, '*–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, —Ö–æ—á–µ—à—å –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Å–≤–æ—é –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å/–º–µ—Å—Ç–æ –≤ –£–ª—å—è–Ω–æ–≤—Å–∫–µ? –í–ø–µ—Ä—ë–¥!\n\n–£–ª—å—è–Ω–æ–≤—Å–∫* ‚Äî –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –≥–æ—Ä–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–≤–ª–µ–∫–∞–µ—Ç —Ç—É—Ä–∏—Å—Ç–æ–≤ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–º–∏ –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–º–∏ –ø–∞–º—è—Ç–Ω–∏–∫–∞–º–∏, –∞ —Ç–∞–∫–∂–µ –ø—Ä–∏—Ä–æ–¥–Ω—ã–º–∏ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—è–º–∏. –û–Ω –∏–∑–≤–µ—Å—Ç–µ–Ω –Ω–µ —Ç–æ–ª—å–∫–æ –∫–∞–∫ —Ä–æ–¥–∏–Ω–∞ –æ—Ç—Ü–∞ –û–∫—Ç—è–±—Ä—å—Å–∫–æ–π —Ä–µ–≤–æ–ª—é—Ü–∏–∏ –í. –ò. –õ–µ–Ω–∏–Ω–∞, –Ω–æ –∏ –∫–∞–∫ –º–µ—Å—Ç–æ, –≥–¥–µ –ø–æ—è–≤–∏–ª–∏—Å—å –Ω–∞ —Å–≤–µ—Ç –≤—ã–¥–∞—é—â–∏–µ—Å—è —Ä—É—Å—Å–∫–∏–µ –ø–∏—Å–∞—Ç–µ–ª–∏ –ù. –ú. –ö–∞—Ä–∞–º–∑–∏–Ω –∏ –ò. –ê. –ì–æ–Ω—á–∞—Ä–æ–≤.', reply_markup=ReplyKeyboardRemove(), parse_mode="Markdown")


@bot.message_handler(commands=['new'])
def get_area(message):

    kb = ReplyKeyboardMarkup(resize_keyboard=True, selective=True)
    btns = [KeyboardButton("–ó–∞—Å–≤–∏—è–∂—Å–∫–∏–π"), KeyboardButton("–ó–∞–≤–æ–ª–∂—Å–∫–∏–π"), KeyboardButton("–ñ–µ–ª–µ–∑–Ω–æ–¥–æ—Ä–æ–∂–Ω—ã–π —Ä–∞–π–æ–Ω"), KeyboardButton("–õ–µ–Ω–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω")]
    for btn in btns:     
        kb.add(btn)
        
    bot.send_message(message.chat.id, '1Ô∏è‚É£ *–í –∫–∞–∫–æ–º —Ä–∞–π–æ–Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å/–º–µ—Å—Ç–æ?*', reply_markup=kb, parse_mode="Markdown")

    bot.register_next_step_handler(message, get_year)


def get_year(message):
    ms_area = message.text
    kb = ReplyKeyboardMarkup(resize_keyboard=True, selective=True)
    btns = [KeyboardButton("2022"), KeyboardButton("2021"), KeyboardButton("2020"), KeyboardButton("2019"), KeyboardButton("2018")]
    for btn in btns:     
        kb.add(btn)
    bot.send_message(message.chat.id, '2Ô∏è‚É£ *–í –∫–∞–∫–æ–º –≥–æ–¥—É –í—ã –ø–æ—Å–µ—â–∞–ª–∏ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å/–º–µ—Å—Ç–æ?*', reply_markup=kb, parse_mode="Markdown")
    bot.register_next_step_handler(message, get_season, ms_area)


def get_season(message, ms_area):
    ms_year = message.text
    kb = ReplyKeyboardMarkup(resize_keyboard=True, selective=True)
    btns = [KeyboardButton("–ó–∏–º–∞"), KeyboardButton("–í–µ—Å–Ω–∞"), KeyboardButton("–õ–µ—Ç–æ"), KeyboardButton("–û—Å–µ–Ω—å")]
    for btn in btns:     
        kb.add(btn)
    bot.send_message(message.chat.id, '3Ô∏è‚É£ *–í –∫–∞–∫–æ–º —Å–µ–∑–æ–Ω–µ –í—ã –ø–æ—Å–µ—â–∞–ª–∏ –µ—ë/–µ–≥–æ?*', reply_markup=kb, parse_mode="Markdown")
    bot.register_next_step_handler(message, get_month, ms_area, ms_year)
    

def get_month(message, ms_area, ms_year):
    ms_sesson = message.text
    kb = ReplyKeyboardMarkup(resize_keyboard=True, selective=True)
    if ms_sesson == "–ó–∏–º–∞":
        btns = [KeyboardButton("–î–µ–∫–∞–±—Ä—å"), KeyboardButton("–Ø–Ω–≤–∞—Ä—å"), KeyboardButton("–§–µ–≤—Ä–∞–ª—å")]
        for btn in btns:     
            kb.add(btn)
    elif ms_sesson == "–í–µ—Å–Ω–∞":
        btns = [KeyboardButton("–ú–∞—Ä—Ç"), KeyboardButton("–ê–ø—Ä–µ–ª—å"), KeyboardButton("–ú–∞–π")]
        for btn in btns:     
            kb.add(btn)
    elif ms_sesson == "–õ–µ—Ç–æ":
        btns = [KeyboardButton("–ò—é–Ω—å"), KeyboardButton("–ò—é–ª—å"), KeyboardButton("–ê–≤–≥—É—Å—Ç")]
        for btn in btns:     
            kb.add(btn)
    elif ms_sesson == "–û—Å–µ–Ω—å":
        btns = [KeyboardButton("–°–µ–Ω—Ç—è–±—Ä—å"), KeyboardButton("–û–∫—Ç—è–±—Ä—å"), KeyboardButton("–ù–æ—è–±—Ä—å")]
        for btn in btns:     
            kb.add(btn)

    bot.send_message(message.chat.id, '4Ô∏è‚É£ *–í –∫–∞–∫–æ–º –º–µ—Å—è—Ü–µ –í—ã –ø–æ—Å–µ—â–∞–ª–∏ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å/–º–µ—Å—Ç–æ?*', reply_markup=kb, parse_mode="Markdown")
    bot.register_next_step_handler(message, get_description, ms_area, ms_year, ms_sesson)


def get_description(message, ms_area, ms_year, ms_sesson):
    ms_month = message.text
    bot.send_message(message.chat.id, '5Ô∏è‚É£ *–û–ø–∏—à–∏—Ç–µ –¥–∞–Ω–Ω—É—é –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å/–º–µ—Å—Ç–æ: *', reply_markup=ReplyKeyboardRemove(), parse_mode="Markdown")
    bot.register_next_step_handler(message, get_feedback, ms_area, ms_year, ms_sesson, ms_month)


def get_feedback(message, ms_area, ms_year, ms_sesson, ms_month):
    ms_description = message.text
    bot.send_message(message.chat.id, '6Ô∏è‚É£ *–ù–∞–ø–∏—à–∏—Ç–µ –æ—Ç–∑—ã–≤ –æ –Ω–µ–π/–Ω—ë–º: *', reply_markup=ReplyKeyboardRemove(), parse_mode="Markdown")
    bot.register_next_step_handler(message, get_mark, ms_area, ms_year, ms_sesson, ms_month, ms_description)


def get_mark(message, ms_area, ms_year, ms_sesson, ms_month, ms_description):
    ms_feedback = message.text
    bot.send_message(message.chat.id, '7Ô∏è‚É£ *–í–∞—à–∞ —Å—É–±—ä–µ–∫—Ç–∏–≤–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ *\n_–û—Ç 1 –¥–æ 10:_', reply_markup=ReplyKeyboardRemove(), parse_mode="Markdown")
    bot.register_next_step_handler(message, choise_photo, ms_area, ms_year, ms_sesson, ms_month, ms_description, ms_feedback)


def choise_photo(message, ms_area, ms_year, ms_sesson, ms_month, ms_description, ms_feedback):
    ms_mark = message.text
    kb = ReplyKeyboardMarkup(resize_keyboard=True, selective=True)
    btns = [KeyboardButton("–î–∞"), KeyboardButton("–ù–µ—Ç")]
    for btn in btns:     
        kb.add(btn) 
    bot.send_message(message.chat.id, '8Ô∏è‚É£ *–£ –≤–∞—Å –µ—Å—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è —ç—Ç–æ–π –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏/–º–µ—Å—Ç–∞?*', reply_markup=kb, parse_mode="Markdown")
    bot.register_next_step_handler(message, choise_moder, ms_area, ms_year, ms_sesson, ms_month, ms_description, ms_feedback, ms_mark)


def choise_moder(message, ms_area, ms_year, ms_sesson, ms_month, ms_description, ms_feedback, ms_mark):
    if message.text == "–î–∞":
        bot.register_next_step_handler(message, get_photo, ms_area, ms_year, ms_sesson, ms_month, ms_description, ms_feedback, ms_mark)
        bot.send_message(message.chat.id, 'üì∏*–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é: *', reply_markup=ReplyKeyboardRemove(), parse_mode="Markdown")
    elif message.text == "–ù–µ—Ç":
        kb = ReplyKeyboardMarkup(resize_keyboard=True, selective=True)
        btns = [KeyboardButton("–î–∞"), KeyboardButton("–ù–µ—Ç")]
        for btn in btns:     
            kb.add(btn) 
        bot.send_message(message.chat.id, 'üì•*–î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é?*', reply_markup=kb, parse_mode="Markdown")
        bot.register_next_step_handler(message, insert_and_send, ms_area, ms_year, ms_sesson, ms_month, ms_description, ms_feedback, ms_mark)


@bot.message_handler(content_types=['photo', 'document'])
def get_photo(message, ms_area, ms_year, ms_sesson, ms_month, ms_description, ms_feedback, ms_mark):
    try:
        kb = ReplyKeyboardMarkup(resize_keyboard=True, selective=True)
        btns = [KeyboardButton("–î–∞"), KeyboardButton("–ù–µ—Ç")]
        for btn in btns:     
            kb.add(btn)

        # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–æ—á–∫—É, –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç
        Path(f'files/{message.chat.id}/').mkdir(parents = True, exist_ok = True)

        # –ò–Ω—Ñ–∞ –æ —Ñ–æ—Ç–æ
        if bot.get_file(message.photo[len(message.photo) - 1].file_id):               # –¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å, —á—Ç–æ–±—ã –∫–æ–≥–¥–∞ –ø—Ä–∏—Å—ã–ª–∞–ª–∏ –ù–ï —Å–∂–∞—Ç–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ - –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —ç—Ç–æ
            file_info = bot.get_file(message.photo[len(message.photo) - 1].file_id)
            downloaded_file = bot.download_file(file_info.file_path)
            src = f'files/{message.chat.id}/{datetime.datetime.now().strftime("%Y%m%d_%H%M")}{file_info.file_path.replace("photos/", "")}'
            print(f'---{src}')
            bot.send_message(message.chat.id, 'üì•*–î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é?*', reply_markup=kb, parse_mode="Markdown")
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
            with open(src, 'wb') as new_file:
                new_file.write(downloaded_file)
            bot.register_next_step_handler(message, insert_and_send, ms_area, ms_year, ms_sesson, ms_month, ms_description, ms_feedback, ms_mark, src)

        else:
            bot.send_message(message.chat.id, '*–ù—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–∂–∞—Ç–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞*', reply_markup=ReplyKeyboardRemove(), parse_mode="Markdown")
            get_area(message)

    except Exception as e:
        print(print(f'!!!{e}'))



bot.message_handler(content_types=["text"])
def insert_and_send(message, ms_area, ms_year, ms_sesson, ms_month, ms_description, ms_feedback, ms_mark, src = False):

    if message.text == "–î–∞":
        bot.send_message(message.chat.id, 'üÜó *–°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–æ, —á—Ç–æ –≤–Ω–µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ. –ú—ã —É–≤–µ–¥–æ–≤–∏–º –≤–∞—Å, –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–π–¥—É—Ç –º–æ–¥–µ—Ä–∞—Ü–∏—é*', reply_markup=ReplyKeyboardRemove(), parse_mode="Markdown")  
        date = datetime.datetime.now().strftime("%Y%m%d_%H%M")

        user_id = message.from_user.id

        if src:
            print(f'###{src}')
            main(f"INSERT INTO Hack (`area`, `year`, `season`, `month`, `description`, `feedback`, `mark`, `date`, `userid`, `src`) VALUES ('{ms_area}', '{ms_year}', '{ms_sesson}', '{ms_month}', '{ms_description}', '{ms_feedback}', '{ms_mark}', '{date}', '{user_id}', '{src}')")
            print(main(f"SELECT id FROM Hack WHERE area='{ms_area}' AND year='{ms_year}' AND season='{ms_sesson}' AND month='{ms_month}' AND description='{ms_description}' AND feedback='{ms_feedback}' AND mark='{ms_mark}' AND userid='{user_id}' AND `src`='{src}';"))
            dates_id = main(f"SELECT id FROM Hack WHERE area='{ms_area}' AND year='{ms_year}' AND season='{ms_sesson}' AND month='{ms_month}' AND description='{ms_description}' AND feedback='{ms_feedback}' AND mark='{ms_mark}' AND userid='{user_id}' AND `src`='{src}';")
            bot.send_photo(806902493, open(src,'rb'), caption=f"*–†–∞–π–æ–Ω:* {ms_area}\n\n*–ì–æ–¥:* {ms_year}\n\n*–°–µ–∑–æ–Ω:* {ms_sesson}\n\n*–ú–µ—Å—è—Ü:* {ms_month}\n\n*–û–ø–∏—Å–∞–Ω–∏–µ:* {ms_description}\n\n*–û—Ç–∑—ã–≤:* {ms_feedback}\n\n*–°—É–±—ä–µ–∫—Ç–∏–≤–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:* {ms_mark}", reply_markup =  gen_markup(dates_id), parse_mode="Markdown")
            print(dates_id)
        else:
            main(f"INSERT INTO Hack (`area`, `year`, `season`, `month`, `description`, `feedback`, `mark`, `date`, `userid`, `src`) VALUES ('{ms_area}', '{ms_year}', '{ms_sesson}', '{ms_month}', '{ms_description}', '{ms_feedback}', '{ms_mark}', '{date}', '{user_id}', '0')")
            dates_id = main(f"SELECT id FROM Hack WHERE area='{ms_area}' AND year='{ms_year}' AND season='{ms_sesson}' AND month='{ms_month}' AND description='{ms_description}' AND feedback='{ms_feedback}' AND mark='{ms_mark}' AND userid='{user_id}' AND src='0';")
            bot.send_message(806902493, f"*–†–∞–π–æ–Ω:* {ms_area}\n\n*–ì–æ–¥:* {ms_year}\n\n*–°–µ–∑–æ–Ω:* {ms_sesson}\n\n*–ú–µ—Å—è—Ü:* {ms_month}\n\n*–û–ø–∏—Å–∞–Ω–∏–µ:* {ms_description}\n\n*–û—Ç–∑—ã–≤:* {ms_feedback}\n\n*–°—É–±—ä–µ–∫—Ç–∏–≤–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:* {ms_mark}", reply_markup =  gen_markup(dates_id), parse_mode="Markdown")
            print(dates_id)
    else:
        bot.send_message(message.chat.id, 'üîú *–ë—É–¥–µ–º –∂–¥–∞—Ç—å –≤–∞—Å —Å–Ω–æ–≤–∞!*', reply_markup=ReplyKeyboardRemove(), parse_mode="Markdown")
        start(message)
    

# –ö–Ω–æ–ø–∫–∏ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
def gen_markup(dates_id):
    markup = InlineKeyboardMarkup()
    markup.row_width = 2
    markup.add(InlineKeyboardButton("‚úÖ–ó–∞–ø–æ—Å—Ç–∏—Ç—å", callback_data=f"{dates_id[0][0]} Yes"), InlineKeyboardButton("‚ùå–ü—Ä–æ–∏–≥–Ω–æ—Ä–∏–≤–æ–≤–∞—Ç—å", callback_data=f"{dates_id[0][0]} No")) # —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è, –∫–∞–∫ –ø–µ—Ä–µ–¥–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –≤ callback_data
    return markup


# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ call_back
@bot.callback_query_handler(func=lambda call: True)
def get_moder(call):
    moder_ids = main(f"SELECT moder_id FROM Moders;")

    call_data = call.data.split()
    data = main(f"SELECT * FROM Hack WHERE `id`={call_data[0]}") 
    area, year, season, month, description, feedback, mark, src = data[0][1], data[0][2], data[0][3], data[0][4], data[0][5], data[0][6], data[0][7], data[0][10]

    if call_data[1] == "Yes":
        if src != '0':
            print(1)
            bot.send_photo(-1001701836271, open(src, 'rb'),
                           caption=f"<b>üè¢–†–∞–π–æ–Ω: </b> {area}\n\n<b>‚è≥–ì–æ–¥: </b> {year}\n\n<b>üèùÔ∏è–°–µ–∑–æ–Ω: </b> {season}\n\n<b>üìÖ–ú–µ—Å—è—Ü: </b> {month}\n\n<b>üìù–û–ø–∏—Å–∞–Ω–∏–µ: </b> {description}\n\n<b>üìà–û—Ç–∑—ã–≤: </b> {feedback}\n\n<b>üåü–°—É–±—ä–µ–∫—Ç–∏–≤–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: </b> {mark}",
                           parse_mode="html")
            bot.send_message(806902493, "*–ü–æ—Å—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω*", reply_markup=ReplyKeyboardRemove(), parse_mode="Markdown")
            bot.send_message(data[0][9], '‚úÖ *–°–ø–∞—Å–∏–±–æ, –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–ª–∏ –º–æ–¥–µ—Ä–∞—Ü–∏—é –∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª!*', reply_markup=ReplyKeyboardRemove(), parse_mode="Markdown")


        else:
            print(2)
            bot.send_message(-1001701836271, f"<b>üè¢–†–∞–π–æ–Ω: </b> {area}\n\n<b>‚è≥–ì–æ–¥: </b> {year}\n\n<b>üèùÔ∏è–°–µ–∑–æ–Ω: </b> {season}\n\n<b>üìÖ–ú–µ—Å—è—Ü: </b> {month}\n\n<b>üìù–û–ø–∏—Å–∞–Ω–∏–µ: </b> {description}\n\n<b>üìà–û—Ç–∑—ã–≤: </b> {feedback}\n\n<b>üåü–°—É–±—ä–µ–∫—Ç–∏–≤–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: </b> {mark}", parse_mode="html")
            bot.send_message(806902493, "*–ü–æ—Å—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω*", reply_markup=ReplyKeyboardRemove(), parse_mode="Markdown")
            bot.send_message(data[0][9], '‚úÖ *–°–ø–∞—Å–∏–±–æ, –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–ª–∏ –º–æ–¥–µ—Ä–∞—Ü–∏—é –∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª!*', reply_markup=ReplyKeyboardRemove(), parse_mode="Markdown")

        bot.answer_callback_query(call.id, "OK, POST PUBLISHED")

    elif call_data[1] == "No":
        print(3)
        bot.answer_callback_query(call.id, "OK, POST IGNORED")
        bot.send_message(data[0][9], '‚ùå *–ü—Ä–æ—Å—Ç–∏—Ç–µ, –¥–∞–Ω–Ω—ã–µ –Ω–µ –ø—Ä–æ—à–ª–∏ –º–æ–¥–µ—Ä–∞—Ü–∏—é. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.*', parse_mode="Markdown")
        bot.send_message(806902493, "*‚ùå–ü–æ—Å—Ç –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω*", reply_markup=ReplyKeyboardRemove(), parse_mode="Markdown")


bot.polling(non_stop=True, interval = 0)